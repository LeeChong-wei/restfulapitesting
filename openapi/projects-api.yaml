openapi: 3.0.0
info:
  title: projects-api
  version: v4
  description: An OpenAPI definition for the GitLab REST API.
servers:
  - url: 'http://10.177.74.168/api/v4'
paths:
  /projects:
    post:
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                allow_merge_on_skipped_pipeline:
                  type: boolean
                  description: 'Set whether or not merge requests can be merged with skipped jobs.'
                approvals_before_merge :
                  type: integer
                  description: 'How many approvers should approve merge requests by default.'
                auto_cancel_pending_pipelines:
                  type: string
                  description: 'Auto-cancel pending pipelines. This isn’t a boolean, but enabled/disabled.'
                auto_devops_deploy_strategy:
                  type: string
                  description: 'Auto Deploy strategy (continuous, manual or timed_incremental).'
                auto_devops_enabled:
                  type: boolean
                  description: 'Enable Auto DevOps for this project.'
                autoclose_referenced_issues:
                  type: boolean
                  description: 'Set whether auto-closing referenced issues on default branch.'
                avatar:
                  type: object
                  description: 'Image file for avatar of the project.'
                build_coverage_regex:
                  type: string
                  description: 'Test coverage parsing.'
                build_git_strategy:
                  type: string
                  description: 'The Git strategy. Defaults to fetch.'
                build_timeout:
                  type: integer
                  description: 'The maximum amount of time in minutes that a job is able run (in seconds).'
                builds_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                ci_config_path:
                  type: string
                  description: 'The path to CI configuration file.'
                container_expiration_policy_attributes:
                  type: object
                  description: 'Update the image cleanup policy for this project. Accepts: cadence (string), keep_n (string), older_than (string), name_regex (string), name_regex_delete (string), name_regex_keep (string), enabled (boolean).'
                container_registry_enabled:
                  type: boolean
                  description: 'Enable container registry for this project.'
                default_branch:
                  type: string
                  description: 'master by default.'
                description:
                  type: string
                  description: 'Short project description.'
                emails_disabled:
                  type: boolean
                  description: 'Disable email notifications.'
                external_authorization_classification_label :
                  type: string
                  description: 'The classification label for the project.'
                forking_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                group_with_project_templates_id :
                  type: integer
                  description: 'For group-level custom templates, specifies ID of group from which all the custom project templates are sourced. Leave empty for instance-level templates. Requires use_custom_template to be true.'
                import_url:
                  type: string
                  description: 'URL to import repository from.'
                initialize_with_readme:
                  type: boolean
                  description: 'false by default.'
                issues_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                issues_enabled:
                  type: boolean
                  description: '(Deprecated) Enable issues for this project. Use issues_access_level instead.'
                jobs_enabled:
                  type: boolean
                  description: '(Deprecated) Enable jobs for this project. Use builds_access_level instead.'
                lfs_enabled:
                  type: boolean
                  description: 'Enable LFS.'
                merge_method:
                  type: string
                  description: 'Set the merge method used.'
                merge_requests_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                merge_requests_enabled:
                  type: boolean
                  description: '(Deprecated) Enable merge requests for this project. Use merge_requests_access_level instead.'
                mirror_trigger_builds :
                  type: boolean
                  description: 'Pull mirroring triggers builds.'
                mirror :
                  type: boolean
                  description: 'Enables pull mirroring in a project.'
                name:
                  type: string
                  description: 'The name of the new project. Equals path if not provided.'
                namespace_id:
                  type: integer
                  description: 'Namespace for the new project (defaults to the current user’s namespace).'
                only_allow_merge_if_all_discussions_are_resolved:
                  type: boolean
                  description: 'Set whether merge requests can only be merged when all the discussions are resolved.'
                only_allow_merge_if_pipeline_succeeds:
                  type: boolean
                  description: 'Set whether merge requests can only be merged with successful jobs.'
                packages_enabled:
                  type: boolean
                  description: 'Enable or disable packages repository feature.'
                pages_access_level:
                  type: string
                  description: 'One of disabled, private, enabled, or public.'
                requirements_access_level:
                  type: string
                  description: 'One of disabled, private, enabled or public'
                path:
                  type: string
                  description: 'Repository name for new project. Generated based on name if not provided (generated as lowercase with dashes).'
                printing_merge_request_link_enabled:
                  type: boolean
                  description: 'Show link to create/view merge request when pushing from the command line.'
                public_builds:
                  type: boolean
                  description: 'If true, jobs can be viewed by non-project members.'
                remove_source_branch_after_merge:
                  type: boolean
                  description: 'Enable Delete source branch option by default for all new merge requests.'
                repository_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                repository_storage:
                  type: string
                  description: 'Which storage shard the repository is on. (admins only)'
                request_access_enabled:
                  type: boolean
                  description: 'Allow users to request member access.'
                resolve_outdated_diff_discussions:
                  type: boolean
                  description: 'Automatically resolve merge request diffs discussions on lines changed with a push.'
                shared_runners_enabled:
                  type: boolean
                  description: 'Enable shared runners for this project.'
                show_default_award_emojis:
                  type: boolean
                  description: 'Show default award emojis.'
                snippets_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                snippets_enabled:
                  type: boolean
                  description: '(Deprecated) Enable snippets for this project. Use snippets_access_level instead.'
                tag_list:
                  type: array
                  items: 
                    type: object
                  description: 'The list of tags for a project; put array of tags, that should be finally assigned to a project.'
                template_name:
                  type: string
                  description: 'When used without use_custom_template, name of a built-in project template. When used with use_custom_template, name of a custom project template.'
                template_project_id :
                  type: integer
                  description: 'When used with use_custom_template, project ID of a custom project template. This is preferable to using template_name since template_name may be ambiguous.'
                use_custom_template :
                  type: boolean
                  description: 'Use either custom instance or group (with group_with_project_templates_id) project template.'
                visibility:
                  type: string
                  description: 'See project visibility level.'
                wiki_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                wiki_enabled:
                  type: boolean
                  description: '(Deprecated) Enable wiki for this project. Use wiki_access_level instead.'
              required:
              - name
              - path
      responses:
        200:
          description: success
    get:
      tags:
      - projects-api
      parameters:
      - name: archived
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by archived status.'
      - name: id_after
        schema: 
          type: integer
        required: false
        in: query
        description: 'Limit results to projects with IDs greater than the specified ID.'
      - name: id_before
        schema: 
          type: integer
        required: false
        in: query
        description: 'Limit results to projects with IDs less than the specified ID.'
      - name: last_activity_after
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit results to projects with last_activity after specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
      - name: last_activity_before
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit results to projects with last_activity before specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
      - name: membership
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects that the current user is a member of.'
      - name: min_access_level
        schema: 
          type: integer
        required: false
        in: query
        description: 'Limit by current user minimal access level.'
      - name: order_by
        schema: 
          type: string
        required: false
        in: query
        description: 'Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. repository_size, storage_size, packages_size or wiki_size fields are only allowed for admins. Default is created_at.'
      - name: owned
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects explicitly owned by the current user.'
      - name: repository_checksum_failed 
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit projects where the repository checksum calculation has failed (Introduced in GitLab Premium 11.2).'
      - name: repository_storage
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit results to projects stored on repository_storage. (admins only)'
      - name: search_namespaces
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include ancestor namespaces when matching search criteria. Default is false.'
      - name: search
        schema: 
          type: string
        required: false
        in: query
        description: 'Return list of projects matching the search criteria.'
      - name: simple
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Return only limited fields for each project. This is a no-op without authentication as then only simple fields are returned.'
      - name: sort
        schema: 
          type: string
        required: false
        in: query
        description: 'Return projects sorted in asc or desc order. Default is desc.'
      - name: starred
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects starred by the current user.'
      - name: statistics
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include project statistics.'
      - name: visibility
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit by visibility public, internal, or private.'
      - name: wiki_checksum_failed 
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit projects where the wiki checksum calculation has failed (Introduced in GitLab Premium 11.2).'
      - name: with_custom_attributes
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include custom attributes in response. (admins only)'
      - name: with_issues_enabled
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by enabled issues feature.'
      - name: with_merge_requests_enabled
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by enabled merge requests feature.'
      - name: with_programming_language
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit by projects which use the given programming language.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    "id":
                      type: integer
                    "description":
                      type: string
                    "default_branch":
                      type: string
                    "ssh_url_to_repo":
                      type: string
                    "http_url_to_repo":
                      type: string
                    "web_url":
                      type: string
                    "readme_url":
                      type: string
                    "tag_list":
                      type: array
                      items:
                        type: string
                    "name":
                      type: string
                    "name_with_namespace":
                      type: string
                    "path":
                      type: string
                    "path_with_namespace":
                      type: string
                    "created_at":
                      type: string
                    "last_activity_at":
                      type: string
                    "forks_count":
                      type: integer
                    "avatar_url":
                      type: string
                    "star_count":
                      type: integer
  /users/{user_id}/projects:
    get:
      tags:
      - projects-api
      parameters:
      - name: archived
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by archived status.'
      - name: id_after
        schema: 
          type: integer
        required: false
        in: query
        description: 'Limit results to projects with IDs greater than the specified ID.'
      - name: id_before
        schema: 
          type: integer
        required: false
        in: query
        description: 'Limit results to projects with IDs less than the specified ID.'
      - name: membership
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects that the current user is a member of.'
      - name: min_access_level
        schema: 
          type: integer
        required: false
        in: query
        description: 'Limit by current user minimal access level.'
      - name: order_by
        schema: 
          type: string
        required: false
        in: query
        description: 'Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. Default is created_at.'
      - name: owned
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects explicitly owned by the current user.'
      - name: search
        schema: 
          type: string
        required: false
        in: query
        description: 'Return list of projects matching the search criteria.'
      - name: simple
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Return only limited fields for each project. This is a no-op without authentication as then only simple fields are returned.'
      - name: sort
        schema: 
          type: string
        required: false
        in: query
        description: 'Return projects sorted in asc or desc order. Default is desc.'
      - name: starred
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects starred by the current user.'
      - name: statistics
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include project statistics.'
      - name: user_id
        schema: 
          type: string
        required: true
        in: path
        description: 'The ID or username of the user.'
      - name: visibility
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit by visibility public, internal, or private.'
      - name: with_custom_attributes
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include custom attributes in response. (admins only)'
      - name: with_issues_enabled
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by enabled issues feature.'
      - name: with_merge_requests_enabled
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by enabled merge requests feature.'
      - name: with_programming_language
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit by projects which use the given programming language.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    "id":
                      type: integer
                    "description":
                      type: string
                    "default_branch":
                      type: string
                    "visibility":
                      type: string
                    "ssh_url_to_repo":
                      type: string
                    "http_url_to_repo":
                      type: string
                    "web_url":
                      type: string
                    "readme_url":
                      type: string
                    "tag_list":
                      type: array
                      items:
                        type: string
                    "owner":
                      type: object
                      properties:
                        "id":
                          type: integer
                        "name":
                          type: string
                        "created_at":
                          type: string
                    "name":
                      type: string
                    "name_with_namespace":
                      type: string
                    "path":
                      type: string
                    "path_with_namespace":
                      type: string
                    "issues_enabled":
                      type: boolean
                    "open_issues_count":
                      type: integer
                    "merge_requests_enabled":
                      type: boolean
                    "jobs_enabled":
                      type: boolean
                    "wiki_enabled":
                      type: boolean
                    "snippets_enabled":
                      type: boolean
                    "can_create_merge_request_in":
                      type: boolean
                    "resolve_outdated_diff_discussions":
                      type: boolean
                    "container_registry_enabled":
                      type: boolean
                    "created_at":
                      type: string
                    "last_activity_at":
                      type: string
                    "creator_id":
                      type: integer
                    "namespace":
                      type: object
                      properties:
                        "id":
                          type: integer
                        "name":
                          type: string
                        "path":
                          type: string
                        "kind":
                          type: string
                        "full_path":
                          type: string
                    "import_status":
                      type: string
                    "archived":
                      type: boolean
                    "avatar_url":
                      type: string
                    "shared_runners_enabled":
                      type: boolean
                    "forks_count":
                      type: integer
                    "star_count":
                      type: integer
                    "runners_token":
                      type: string
                    "ci_default_git_depth":
                      type: integer
                    "ci_forward_deployment_enabled":
                      type: boolean
                    "public_jobs":
                      type: boolean
                    "shared_with_groups":
                      type: array
                      items:
                        type: object
                    "only_allow_merge_if_pipeline_succeeds":
                      type: boolean
                    "allow_merge_on_skipped_pipeline":
                      type: boolean
                    "only_allow_merge_if_all_discussions_are_resolved":
                      type: boolean
                    "remove_source_branch_after_merge":
                      type: boolean
                    "request_access_enabled":
                      type: boolean
                    "merge_method":
                      type: string
                    "autoclose_referenced_issues":
                      type: boolean
                    "suggestion_commit_message":
                      type: string
                    "marked_for_deletion_at":
                      type: string
                    "marked_for_deletion_on":
                      type: string
                    "statistics":
                      type: object
                      properties:
                        "commit_count":
                          type: integer
                        "storage_size":
                          type: integer
                        "repository_size":
                          type: integer
                        "wiki_size" :
                          type: integer
                        "lfs_objects_size":
                          type: integer
                        "job_artifacts_size":
                          type: integer
                        "packages_size":
                          type: integer
                        "snippets_size":
                          type: integer
                    "_links":
                      type: object
                      properties:
                        "self":
                          type: string
                        "issues":
                          type: string
                        "merge_requests":
                          type: string
                        "repo_branches":
                          type: string
                        "labels":
                          type: string
                        "events":
                          type: string
                        "members":
                          type: string
  /users/{user_id}/starred_projects:
    get:
      tags:
      - projects-api
      parameters:
      - name: archived
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by archived status.'
      - name: membership
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects that the current user is a member of.'
      - name: min_access_level
        schema: 
          type: integer
        required: false
        in: query
        description: 'Limit by current user minimal access level.'
      - name: order_by
        schema: 
          type: string
        required: false
        in: query
        description: 'Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. Default is created_at.'
      - name: owned
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects explicitly owned by the current user.'
      - name: search
        schema: 
          type: string
        required: false
        in: query
        description: 'Return list of projects matching the search criteria.'
      - name: simple
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Return only limited fields for each project. This is a no-op without authentication as then only simple fields are returned..'
      - name: sort
        schema: 
          type: string
        required: false
        in: query
        description: 'Return projects sorted in asc or desc order. Default is desc.'
      - name: starred
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects starred by the current user.'
      - name: statistics
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include project statistics.'
      - name: user_id
        schema: 
          type: string
        required: true
        in: path
        description: 'The ID or username of the user.'
      - name: visibility
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit by visibility public, internal, or private.'
      - name: with_custom_attributes
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include custom attributes in response. (admins only)'
      - name: with_issues_enabled
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by enabled issues feature.'
      - name: with_merge_requests_enabled
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by enabled merge requests feature.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    "id":
                      type: integer
                    "description":
                      type: string
                    "default_branch":
                      type: string
                    "visibility":
                      type: string
                    "ssh_url_to_repo":
                      type: string
                    "http_url_to_repo":
                      type: string
                    "web_url":
                      type: string
                    "readme_url":
                      type: string
                    "tag_list":
                      type: array
                      items:
                        type: object
                    "owner":
                      type: object
                      properties:
                        "id":
                          type: integer
                        "name":
                          type: string
                        "created_at":
                          type: string
                    "name":
                      type: string
                    "name_with_namespace":
                      type: string
                    "path":
                      type: string
                    "path_with_namespace":
                      type: string
                    "issues_enabled":
                      type: boolean
                    "open_issues_count":
                      type: integer
                    "merge_requests_enabled":
                      type: boolean
                    "jobs_enabled":
                      type: boolean
                    "wiki_enabled":
                      type: boolean
                    "snippets_enabled":
                      type: boolean
                    "can_create_merge_request_in":
                      type: boolean
                    "resolve_outdated_diff_discussions":
                      type: boolean
                    "container_registry_enabled":
                      type: boolean
                    "created_at":
                      type: string
                    "last_activity_at":
                      type: string
                    "creator_id":
                      type: integer
                    "namespace":
                      type: object
                      properties:
                        "id":
                          type: integer
                        "name":
                          type: string
                        "path":
                          type: string
                        "kind":
                          type: string
                        "full_path":
                          type: string
                    "import_status":
                      type: string
                    "archived":
                      type: boolean
                    "avatar_url":
                      type: string
                    "shared_runners_enabled":
                      type: boolean
                    "forks_count":
                      type: integer
                    "star_count":
                      type: integer
                    "runners_token":
                      type: string
                    "public_jobs":
                      type: boolean
                    "shared_with_groups":
                      type: array
                      items:
                        type: object
                    "only_allow_merge_if_pipeline_succeeds":
                      type: boolean
                    "allow_merge_on_skipped_pipeline":
                      type: boolean
                    "only_allow_merge_if_all_discussions_are_resolved":
                      type: boolean
                    "remove_source_branch_after_merge":
                      type: boolean
                    "request_access_enabled":
                      type: boolean
                    "merge_method":
                      type: string
                    "autoclose_referenced_issues":
                      type: boolean
                    "suggestion_commit_message":
                      type: string
                    "statistics":
                      type: object
                      properties:
                        "commit_count":
                          type: integer
                        "storage_size":
                          type: integer
                        "repository_size":
                          type: integer
                        "lfs_objects_size":
                          type: integer
                        "job_artifacts_size":
                          type: integer
                    "_links":
                      type: object
                      properties:
                        "self":
                          type: string
                        "issues":
                          type: string
                        "merge_requests":
                          type: string
                        "repo_branches":
                          type: string
                        "labels":
                          type: string
                        "events":
                          type: string
                        "members":
                          type: string
  /projects/{id}:
    delete:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
    put:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                allow_merge_on_skipped_pipeline:
                  type: boolean
                  description: 'Set whether or not merge requests can be merged with skipped jobs.'
                approvals_before_merge :
                  type: integer
                  description: 'How many approvers should approve merge request by default.'
                auto_cancel_pending_pipelines:
                  type: string
                  description: 'Auto-cancel pending pipelines. This isn’t a boolean, but enabled/disabled.'
                auto_devops_deploy_strategy:
                  type: string
                  description: 'Auto Deploy strategy (continuous, manual, or timed_incremental).'
                auto_devops_enabled:
                  type: boolean
                  description: 'Enable Auto DevOps for this project.'
                autoclose_referenced_issues:
                  type: boolean
                  description: 'Set whether auto-closing referenced issues on default branch.'
                avatar:
                  type: object
                  description: 'Image file for avatar of the project.'
                build_coverage_regex:
                  type: string
                  description: 'Test coverage parsing.'
                build_git_strategy:
                  type: string
                  description: 'The Git strategy. Defaults to fetch.'
                build_timeout:
                  type: integer
                  description: 'The maximum amount of time in minutes that a job is able run (in seconds).'
                builds_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                ci_config_path:
                  type: string
                  description: 'The path to CI configuration file.'
                ci_default_git_depth:
                  type: integer
                  description: 'Default number of revisions for shallow cloning.'
                ci_forward_deployment_enabled:
                  type: boolean
                  description: 'When a new deployment job starts, skip older deployment jobs that are still pending'
                container_expiration_policy_attributes:
                  type: object
                  description: 'Update the image cleanup policy for this project. Accepts: cadence (string), keep_n (string), older_than (string), name_regex (string), name_regex_delete (string), name_regex_keep (string), enabled (boolean).'
                container_registry_enabled:
                  type: boolean
                  description: 'Enable container registry for this project.'
                default_branch:
                  type: string
                  description: 'master by default.'
                description:
                  type: string
                  description: 'Short project description.'
                emails_disabled:
                  type: boolean
                  description: 'Disable email notifications.'
                external_authorization_classification_label :
                  type: string
                  description: 'The classification label for the project.'
                forking_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                import_url:
                  type: string
                  description: 'URL to import repository from.'
                issues_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                issues_enabled:
                  type: boolean
                  description: '(Deprecated) Enable issues for this project. Use issues_access_level instead.'
                jobs_enabled:
                  type: boolean
                  description: '(Deprecated) Enable jobs for this project. Use builds_access_level instead.'
                lfs_enabled:
                  type: boolean
                  description: 'Enable LFS.'
                merge_method:
                  type: string
                  description: 'Set the merge method used.'
                merge_requests_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                merge_requests_enabled:
                  type: boolean
                  description: '(Deprecated) Enable merge requests for this project. Use merge_requests_access_level instead.'
                mirror_overwrites_diverged_branches :
                  type: boolean
                  description: 'Pull mirror overwrites diverged branches.'
                mirror_trigger_builds :
                  type: boolean
                  description: 'Pull mirroring triggers builds.'
                mirror_user_id :
                  type: integer
                  description: 'User responsible for all the activity surrounding a pull mirror event. (admins only)'
                mirror :
                  type: boolean
                  description: 'Enables pull mirroring in a project.'
                name:
                  type: string
                  description: 'The name of the project.'
                only_allow_merge_if_all_discussions_are_resolved:
                  type: boolean
                  description: 'Set whether merge requests can only be merged when all the discussions are resolved.'
                only_allow_merge_if_pipeline_succeeds:
                  type: boolean
                  description: 'Set whether merge requests can only be merged with successful jobs.'
                only_mirror_protected_branches :
                  type: boolean
                  description: 'Only mirror protected branches.'
                packages_enabled:
                  type: boolean
                  description: 'Enable or disable packages repository feature.'
                pages_access_level:
                  type: string
                  description: 'One of disabled, private, enabled, or public.'
                requirements_access_level:
                  type: string
                  description: 'One of disabled, private, enabled or public'
                path:
                  type: string
                  description: 'Custom repository name for the project. By default generated based on name.'
                public_builds:
                  type: boolean
                  description: 'If true, jobs can be viewed by non-project members.'
                remove_source_branch_after_merge:
                  type: boolean
                  description: 'Enable Delete source branch option by default for all new merge requests.'
                repository_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                repository_storage:
                  type: string
                  description: 'Which storage shard the repository is on. (admins only)'
                request_access_enabled:
                  type: boolean
                  description: 'Allow users to request member access.'
                resolve_outdated_diff_discussions:
                  type: boolean
                  description: 'Automatically resolve merge request diffs discussions on lines changed with a push.'
                service_desk_enabled:
                  type: boolean
                  description: 'Enable or disable Service Desk feature.'
                shared_runners_enabled:
                  type: boolean
                  description: 'Enable shared runners for this project.'
                show_default_award_emojis:
                  type: boolean
                  description: 'Show default award emojis.'
                snippets_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                snippets_enabled:
                  type: boolean
                  description: '(Deprecated) Enable snippets for this project. Use snippets_access_level instead.'
                suggestion_commit_message:
                  type: string
                  description: 'The commit message used to apply merge request suggestions.'
                tag_list:
                  type: array
                  items:
                    type: object
                  description: 'The list of tags for a project; put array of tags, that should be finally assigned to a project.'
                visibility:
                  type: string
                  description: 'See project visibility level.'
                wiki_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                wiki_enabled:
                  type: boolean
                  description: '(Deprecated) Enable wiki for this project. Use wiki_access_level instead.'
      responses:
        200:
          description: success
    get:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      - name: license
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include project license data.'
      - name: statistics
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include project statistics.'
      - name: with_custom_attributes
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include custom attributes in response. (admins only)'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "id":
                    type: integer
                  "description":
                    type: string
                  "default_branch":
                    type: string
                  "visibility":
                    type: string
                  "ssh_url_to_repo":
                    type: string
                  "http_url_to_repo":
                    type: string
                  "web_url":
                    type: string
                  "readme_url":
                    type: string
                  "tag_list":
                    type: array
                    items:
                      type: object
  /projects/{id}/users:
    get:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      - name: search
        schema: 
          type: string
        required: false
        in: query
        description: 'Search for specific users.'
      - name: skip_users
        schema: 
          type: array
          items:
            type: integer 
        required: false
        in: query
        description: 'Filter out users with the specified IDs.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    "id":
                      type: integer
                    "username":
                      type: string
                    "name":
                      type: string
                    "state":
                      type: string
                    "avatar_url":
                      type: string
                    "web_url":
                      type: string
  /projects/user/{user_id}:
    post:
      tags:
      - projects-api
      parameters:
      - name: user_id
        schema: 
          type: integer
        required: true
        in: path
        description: 'The user ID of the project owner.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                allow_merge_on_skipped_pipeline:
                  type: boolean
                  description: 'Set whether or not merge requests can be merged with skipped jobs.'
                approvals_before_merge :
                  type: integer
                  description: 'How many approvers should approve merge requests by default.'
                auto_cancel_pending_pipelines:
                  type: string
                  description: 'Auto-cancel pending pipelines. This isn’t a boolean, but enabled/disabled.'
                auto_devops_deploy_strategy:
                  type: string
                  description: 'Auto Deploy strategy (continuous, manual or timed_incremental).'
                auto_devops_enabled:
                  type: boolean
                  description: 'Enable Auto DevOps for this project.'
                autoclose_referenced_issues:
                  type: boolean
                  description: 'Set whether auto-closing referenced issues on default branch.'
                avatar:
                  type: object
                  description: 'Image file for avatar of the project.'
                build_coverage_regex:
                  type: string
                  description: 'Test coverage parsing.'
                build_git_strategy:
                  type: string
                  description: 'The Git strategy. Defaults to fetch.'
                build_timeout:
                  type: integer
                  description: 'The maximum amount of time in minutes that a job is able run (in seconds).'
                builds_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                ci_config_path:
                  type: string
                  description: 'The path to CI configuration file.'
                container_registry_enabled:
                  type: boolean
                  description: 'Enable container registry for this project.'
                description:
                  type: string
                  description: 'Short project description.'
                emails_disabled:
                  type: boolean
                  description: 'Disable email notifications.'
                external_authorization_classification_label :
                  type: string
                  description: 'The classification label for the project.'
                forking_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                group_with_project_templates_id :
                  type: integer
                  description: 'For group-level custom templates, specifies ID of group from which all the custom project templates are sourced. Leave empty for instance-level templates. Requires use_custom_template to be true.'
                import_url:
                  type: string
                  description: 'URL to import repository from.'
                initialize_with_readme:
                  type: boolean
                  description: 'false by default.'
                issues_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                issues_enabled:
                  type: boolean
                  description: '(Deprecated) Enable issues for this project. Use issues_access_level instead.'
                jobs_enabled:
                  type: boolean
                  description: '(Deprecated) Enable jobs for this project. Use builds_access_level instead.'
                lfs_enabled:
                  type: boolean
                  description: 'Enable LFS.'
                merge_method:
                  type: string
                  description: 'Set the merge method used.'
                merge_requests_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                merge_requests_enabled:
                  type: boolean
                  description: '(Deprecated) Enable merge requests for this project. Use merge_requests_access_level instead.'
                mirror_trigger_builds :
                  type: boolean
                  description: 'Pull mirroring triggers builds.'
                mirror :
                  type: boolean
                  description: 'Enables pull mirroring in a project.'
                name:
                  type: string
                  description: 'The name of the new project.'
                namespace_id:
                  type: integer
                  description: 'Namespace for the new project (defaults to the current user’s namespace).'
                only_allow_merge_if_all_discussions_are_resolved:
                  type: boolean
                  description: 'Set whether merge requests can only be merged when all the discussions are resolved.'
                only_allow_merge_if_pipeline_succeeds:
                  type: boolean
                  description: 'Set whether merge requests can only be merged with successful jobs.'
                packages_enabled:
                  type: boolean
                  description: 'Enable or disable packages repository feature.'
                pages_access_level:
                  type: string
                  description: 'One of disabled, private, enabled, or public.'
                requirements_access_level:
                  type: string
                  description: 'One of disabled, private, enabled or public'
                path:
                  type: string
                  description: 'Custom repository name for new project. By default generated based on name.'
                printing_merge_request_link_enabled:
                  type: boolean
                  description: 'Show link to create/view merge request when pushing from the command line.'
                public_builds:
                  type: boolean
                  description: 'If true, jobs can be viewed by non-project-members.'
                remove_source_branch_after_merge:
                  type: boolean
                  description: 'Enable Delete source branch option by default for all new merge requests.'
                repository_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                repository_storage:
                  type: string
                  description: 'Which storage shard the repository is on. (admins only)'
                request_access_enabled:
                  type: boolean
                  description: 'Allow users to request member access.'
                resolve_outdated_diff_discussions:
                  type: boolean
                  description: 'Automatically resolve merge request diffs discussions on lines changed with a push.'
                shared_runners_enabled:
                  type: boolean
                  description: 'Enable shared runners for this project.'
                show_default_award_emojis:
                  type: boolean
                  description: 'Show default award emojis.'
                snippets_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                snippets_enabled:
                  type: boolean
                  description: '(Deprecated) Enable snippets for this project. Use snippets_access_level instead.'
                suggestion_commit_message:
                  type: string
                  description: 'The commit message used to apply merge request suggestions.'
                tag_list:
                  type: array
                  items:
                    type: object
                  description: 'The list of tags for a project; put array of tags, that should be finally assigned to a project.'
                template_name:
                  type: string
                  description: 'When used without use_custom_template, name of a built-in project template. When used with use_custom_template, name of a custom project template.'
                use_custom_template :
                  type: boolean
                  description: 'Use either custom instance or group (with group_with_project_templates_id) project template.'
                visibility:
                  type: string
                  description: 'See project visibility level.'
                wiki_access_level:
                  type: string
                  description: 'One of disabled, private, or enabled.'
                wiki_enabled:
                  type: boolean
                  description: '(Deprecated) Enable wiki for this project. Use wiki_access_level instead.'
              required:
              - name
      responses:
        200:
          description: success
  /projects/{id}/fork:
    delete:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name assigned to the resultant project after forking.'
                namespace_id:
                  type: integer
                  description: 'The ID of the namespace that the project is forked to.'
                namespace_path:
                  type: string
                  description: 'The path of the namespace that the project is forked to.'
                namespace:
                  oneOf:
                  - type: integer
                  - type: string
                  description: '(Deprecated) The ID or path of the namespace that the project is forked to.'
                path:
                  type: string
                  description: 'The path assigned to the resultant project after forking.'
      responses:
        200:
          description: success
  /projects/{id}/forks:
    get:
      tags:
      - projects-api
      parameters:
      - name: archived
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by archived status.'
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      - name: membership
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects that the current user is a member of.'
      - name: min_access_level
        schema: 
          type: integer
        required: false
        in: query
        description: 'Limit by current user minimal access level.'
      - name: order_by
        schema: 
          type: string
        required: false
        in: query
        description: 'Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. Default is created_at.'
      - name: owned
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects explicitly owned by the current user.'
      - name: search
        schema: 
          type: string
        required: false
        in: query
        description: 'Return list of projects matching the search criteria.'
      - name: simple
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Return only limited fields for each project. This is a no-op without authentication as then only simple fields are returned.'
      - name: sort
        schema: 
          type: string
        required: false
        in: query
        description: 'Return projects sorted in asc or desc order. Default is desc.'
      - name: starred
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by projects starred by the current user.'
      - name: statistics
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include project statistics.'
      - name: visibility
        schema: 
          type: string
        required: false
        in: query
        description: 'Limit by visibility public, internal, or private.'
      - name: with_custom_attributes
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Include custom attributes in response. (admins only)'
      - name: with_issues_enabled
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by enabled issues feature.'
      - name: with_merge_requests_enabled
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Limit by enabled merge requests feature.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    "id":
                      type: integer
                    "description":
                      type: string
                    "default_branch":
                      type: string
                    "visibility":
                      type: string
                    "ssh_url_to_repo":
                      type: string
                    "http_url_to_repo":
                      type: string
                    "web_url":
                      type: string
                    "readme_url":
                      type: string
                    "tag_list":
                      type: array
                      items:
                        type: string
                    "name":
                      type: string
                    "name_with_namespace":
                      type: string
                    "path":
                      type: string
                    "path_with_namespace":
                      type: string
                    "issues_enabled":
                      type: boolean
                    "open_issues_count":
                      type: integer
                    "merge_requests_enabled":
                      type: boolean
                    "jobs_enabled":
                      type: boolean
                    "wiki_enabled":
                      type: boolean
                    "snippets_enabled":
                      type: boolean
                    "can_create_merge_request_in":
                      type: boolean
                    "resolve_outdated_diff_discussions":
                      type: boolean
                    "container_registry_enabled":
                      type: boolean
                    "created_at":
                      type: string
                    "last_activity_at":
                      type: string
                    "creator_id":
                      type: integer
                    "namespace":
                      type: object
                      properties:
                        "id":
                          type: integer
                        "name":
                          type: string
                        "path":
                          type: string
                        "kind":
                          type: string
                        "full_path":
                          type: string
                    "import_status":
                      type: string
                    "archived":
                      type: boolean
                    "avatar_url":
                      type: string
                    "shared_runners_enabled":
                      type: boolean
                    "forks_count":
                      type: integer
                    "star_count":
                      type: integer
                    "public_jobs":
                      type: boolean
                    "shared_with_groups":
                      type: array
                      items:
                        type: object
                    "only_allow_merge_if_pipeline_succeeds":
                      type: boolean
                    "allow_merge_on_skipped_pipeline":
                      type: boolean
                    "only_allow_merge_if_all_discussions_are_resolved":
                      type: boolean
                    "remove_source_branch_after_merge":
                      type: boolean
                    "request_access_enabled":
                      type: boolean
                    "merge_method":
                      type: string
                    "autoclose_referenced_issues":
                      type: boolean
                    "suggestion_commit_message":
                      type: string
                    "_links":
                      type: object
                      properties:
                        "self":
                          type: string
                        "issues":
                          type: string
                        "merge_requests":
                          type: string
                        "repo_branches":
                          type: string
                        "labels":
                          type: string
                        "events":
                          type: string
                        "members":
                          type: string
  /projects/{id}/star:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "id":
                    type: integer
                  "description":
                    type: string
                  "default_branch":
                    type: string
                  "visibility":
                    type: string
                  "ssh_url_to_repo":
                    type: string
                  "http_url_to_repo":
                    type: string
                  "web_url":
                    type: string
                  "readme_url":
                    type: string
                  "tag_list":
                    type: array
                    items:
                      type: object
  /projects/{id}/unstar:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "id":
                    type: integer
                  "description":
                    type: string
                  "default_branch":
                    type: string
                  "visibility":
                    type: string
                  "ssh_url_to_repo":
                    type: string
                  "http_url_to_repo":
                    type: string
                  "web_url":
                    type: string
                  "readme_url":
                    type: string
                  "tag_list":
                    type: array
                    items:
                      type: object
  /projects/{id}/starrers:
    get:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      - name: search
        schema: 
          type: string
        required: false
        in: query
        description: 'Search for specific users.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    "starred_since":
                      type: string
                    "user":
                      type: object
                      properties:
                        "id":
                          type: integer
                        "username":
                          type: string
                        "name":
                          type: string
                        "state":
                          type: string
                        "avatar_url":
                          type: string
                        "web_url":
                          type: string
  /projects/{id}/languages:
    get:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "Ruby":
                    type: string
                  "JavaScript":
                    type: string
                  "HTML":
                    type: string
                  "CoffeeScript":
                    type: string
  /projects/{id}/archive:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "id":
                    type: integer
                  "description":
                    type: string
                  "default_branch":
                    type: string
                  "visibility":
                    type: string
                  "ssh_url_to_repo":
                    type: string
                  "http_url_to_repo":
                    type: string
                  "web_url":
                    type: string
                  "readme_url":
                    type: string
                  "tag_list":
                    type: array
                    items:
                      type: object
  /projects/{id}/unarchive:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "id":
                    type: integer
                  "description":
                    type: string
                  "default_branch":
                    type: string
                  "visibility":
                    type: string
                  "ssh_url_to_repo":
                    type: string
                  "http_url_to_repo":
                    type: string
                  "web_url":
                    type: string
                  "readme_url":
                    type: string
                  "tag_list":
                    type: array
                    items:
                      type: object
  /projects/{id}/restore:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
  /projects/{id}/uploads:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: 'The file to be uploaded.'
              required:
              - file
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "alt":
                    type: string
                  "url":
                    type: string
                  "full_path":
                    type: string
                  "markdown":
                    type: array
                    items:
                      type: object
  /projects/{id}/share:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                expires_at:
                  type: string
                  description: 'Share expiration date in ISO 8601 format: 2016-09-26'
                group_access:
                  type: integer
                  description: 'The access level to grant the group.'
                group_id:
                  type: integer
                  description: 'The ID of the group to share with.'
              required:
              - group_access
              - group_id
      responses:
        200:
          description: success
  /projects/{id}/share/{group_id}:
    delete:
      tags:
      - projects-api
      parameters:
      - name: group_id
        schema: 
          type: integer
        required: true
        in: path
        description: 'The ID of the group.'
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
  /projects/{id}/hooks:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                confidential_issues_events:
                  type: boolean
                  description: 'Trigger hook on confidential issues events.'
                confidential_note_events:
                  type: boolean
                  description: 'Trigger hook on confidential note events.'
                deployment_events:
                  type: boolean
                  description: 'Trigger hook on deployment events.'
                enable_ssl_verification:
                  type: boolean
                  description: 'Do SSL verification when triggering the hook.'
                issues_events:
                  type: boolean
                  description: 'Trigger hook on issues events.'
                job_events:
                  type: boolean
                  description: 'Trigger hook on job events.'
                merge_requests_events:
                  type: boolean
                  description: 'Trigger hook on merge requests events.'
                note_events:
                  type: boolean
                  description: 'Trigger hook on note events.'
                pipeline_events:
                  type: boolean
                  description: 'Trigger hook on pipeline events.'
                push_events_branch_filter:
                  type: string
                  description: 'Trigger hook on push events for matching branches only.'
                push_events:
                  type: boolean
                  description: 'Trigger hook on push events.'
                tag_push_events:
                  type: boolean
                  description: 'Trigger hook on tag push events.'
                token:
                  type: string
                  description: 'Secret token to validate received payloads; this isn’t returned in the response.'
                url:
                  type: string
                  description: 'The hook URL.'
                wiki_page_events:
                  type: boolean
                  description: 'Trigger hook on wiki events.'
              required:
              - url
      responses:
        200:
          description: success
    get:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
  /projects/{id}/hooks/{hook_id}:
    delete:
      tags:
      - projects-api
      parameters:
      - name: hook_id
        schema: 
          type: integer
        required: true
        in: path
        description: 'The ID of the project hook.'
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
    put:
      tags:
      - projects-api
      parameters:
      - name: hook_id
        schema: 
          type: integer
        required: true
        in: path
        description: 'The ID of the project hook.'
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                confidential_issues_events:
                  type: boolean
                  description: 'Trigger hook on confidential issues events.'
                confidential_note_events:
                  type: boolean
                  description: 'Trigger hook on confidential note events.'
                deployment_events:
                  type: boolean
                  description: 'Trigger hook on deployment events.'
                enable_ssl_verification:
                  type: boolean
                  description: 'Do SSL verification when triggering the hook.'
                issues_events:
                  type: boolean
                  description: 'Trigger hook on issues events.'
                job_events:
                  type: boolean
                  description: 'Trigger hook on job events.'
                merge_requests_events:
                  type: boolean
                  description: 'Trigger hook on merge requests events.'
                note_events:
                  type: boolean
                  description: 'Trigger hook on note events.'
                pipeline_events:
                  type: boolean
                  description: 'Trigger hook on pipeline events.'
                push_events_branch_filter:
                  type: string
                  description: 'Trigger hook on push events for matching branches only.'
                push_events:
                  type: boolean
                  description: 'Trigger hook on push events.'
                tag_push_events:
                  type: boolean
                  description: 'Trigger hook on tag push events.'
                token:
                  type: string
                  description: 'Secret token to validate received payloads; this isn’t returned in the response.'
                url:
                  type: string
                  description: 'The hook URL.'
                wiki_events:
                  type: boolean
                  description: 'Trigger hook on wiki events.'
                releases_events:
                  type: boolean
                  description: 'Trigger hook on release events.'
              required:
              - url
      responses:
        200:
          description: success
    get:
      tags:
      - projects-api
      parameters:
      - name: hook_id
        schema: 
          type: integer
        required: true
        in: path
        description: 'The ID of a project hook.'
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "id":
                    type: integer
                  "url":
                    type: string
                  "project_id":
                    type: integer
                  "push_events":
                    type: boolean
                  "push_events_branch_filter":
                    type: string
                  "issues_events":
                    type: boolean
                  "confidential_issues_events":
                    type: boolean
                  "merge_requests_events":
                    type: boolean
                  "tag_push_events":
                    type: boolean
                  "note_events":
                    type: boolean
                  "confidential_note_events":
                    type: boolean
                  "job_events":
                    type: boolean
                  "pipeline_events":
                    type: boolean
                  "wiki_page_events":
                    type: boolean
                  "deployment_events":
                    type: boolean
                  "releases_events":
                    type: boolean
                  "enable_ssl_verification":
                    type: boolean
                  "created_at":
                    type: string
  /projects/{id}/fork/{forked_from_id}:
    post:
      tags:
      - projects-api
      parameters:
      - name: forked_from_id
        schema: 
          type: integer
        required: true
        in: path
        description: 'The ID of the project that was forked from.'
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
  /projects/{id}/housekeeping:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID of the project or NAMESPACE/PROJECT_NAME.'
      responses:
        200:
          description: success
  /projects/{id}/push_rule:
    delete:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
    put:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID of the project or NAMESPACE/PROJECT_NAME.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                author_email_regex :
                  type: string
                  description: 'All commit author emails must match this, for example @my-company.com$.'
                branch_name_regex :
                  type: string
                  description: 'All branch names must match this, for example (feature|hotfix)\/*.'
                commit_committer_check :
                  type: boolean
                  description: 'Users can only push commits to this repository that were committed with one of their own verified emails.'
                commit_message_negative_regex :
                  type: string
                  description: 'No commit message is allowed to match this, for example ssh\:\/\/.'
                commit_message_regex :
                  type: string
                  description: 'All commit messages must match this, for example Fixed \d+\..*.'
                deny_delete_tag :
                  type: boolean
                  description: 'Deny deleting a tag.'
                file_name_regex :
                  type: string
                  description: 'All committed filenames must not match this, for example (jar|exe)$.'
                max_file_size :
                  type: integer
                  description: 'Maximum file size (MB).'
                member_check :
                  type: boolean
                  description: 'Restrict commits by author (email) to existing GitLab users.'
                prevent_secrets :
                  type: boolean
                  description: 'GitLab will reject any files that are likely to contain secrets.'
                reject_unsigned_commits :
                  type: boolean
                  description: 'Reject commits when they are not GPG signed.'
      responses:
        200:
          description: success
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID of the project or NAMESPACE/PROJECT_NAME.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                author_email_regex :
                  type: string
                  description: 'All commit author emails must match this, for example @my-company.com$.'
                branch_name_regex :
                  type: string
                  description: 'All branch names must match this, for example (feature|hotfix)\/*.'
                commit_committer_check :
                  type: boolean
                  description: 'Users can only push commits to this repository that were committed with one of their own verified emails.'
                commit_message_negative_regex :
                  type: string
                  description: 'No commit message is allowed to match this, for example ssh\:\/\/.'
                commit_message_regex :
                  type: string
                  description: 'All commit messages must match this, for example Fixed \d+\..*.'
                deny_delete_tag :
                  type: boolean
                  description: 'Deny deleting a tag.'
                file_name_regex :
                  type: string
                  description: 'All committed filenames must not match this, for example (jar|exe)$.'
                max_file_size :
                  type: integer
                  description: 'Maximum file size (MB).'
                member_check :
                  type: boolean
                  description: 'Restrict commits by author (email) to existing GitLab users.'
                prevent_secrets :
                  type: boolean
                  description: 'GitLab will reject any files that are likely to contain secrets.'
                reject_unsigned_commits :
                  type: boolean
                  description: 'Reject commit when it’s not signed through GPG.'
      responses:
        200:
          description: success
    get:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID of the project or NAMESPACE/PROJECT_NAME.'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "id":
                    type: integer
                  "project_id":
                    type: integer
                  "commit_message_regex":
                    type: string
                  "commit_message_negative_regex":
                    type: string
                  "branch_name_regex":
                    type: string
                  "deny_delete_tag":
                    type: boolean
                  "created_at":
                    type: string
                  "member_check":
                    type: boolean
                  "prevent_secrets":
                    type: boolean
                  "author_email_regex":
                    type: string
                  "file_name_regex":
                    type: string
                  "max_file_size":
                    type: integer
                  "commit_committer_check":
                    type: boolean
                  "reject_unsigned_commits":
                    type: boolean
  /projects/{id}/transfer:
    put:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      requestBody:
        required: true
        content: 
          application/json: 
            schema:
              type: object
              properties:
                namespace:
                  oneOf:
                  - type: integer
                  - type: string
                  description: 'The ID or path of the namespace to transfer to project to.'
              required:
              - namespace
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  "id":
                    type: integer
                  "description":
                    type: string
                  "name":
                    type: string
                  "name_with_namespace":
                    type: string
                  "path":
                    type: string
                  "path_with_namespace":
                    type: string
                  "created_at":
                    type: string
                  "default_branch":
                    type: string
                  "tag_list":
                    type: array
                    items:
                      type: object
  /projects/{id}/mirror/pull:
    post:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      responses:
        200:
          description: success
  /projects/{id}/snapshot:
    get:
      tags:
      - projects-api
      parameters:
      - name: id
        schema: 
          oneOf:
          - type: string
          - type: integer
        required: true
        in: path
        description: 'The ID or URL-encoded path of the project.'
      - name: wiki
        schema: 
          type: boolean
        required: false
        in: query
        description: 'Whether to download the wiki, rather than project, repository.'
      responses:
        200:
          description: success
